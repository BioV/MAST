% Generated by roxygen2 (4.0.1): do not edit by hand
\name{zlm.SingleCellAssay}
\alias{zlm.SingleCellAssay}
\title{zlm.SingleCellAssay}
\usage{
zlm.SingleCellAssay(formula, sca, method = "glm", hypothesis, type = "Wald",
  keep.zlm = "false", .parallel = FALSE, silent = TRUE, ...)
}
\arguments{
\item{formula}{a formula with the measurement variable on the LHS and predictors present in cData on the RHS}

\item{sca}{SingleCellAssay object}

\item{method}{character vector, either 'glm' or 'glmer'}

\item{hypo.terms}{character vector giving terms to drop from model}

\item{hypo.contrasts}{specific contrasts to test in form expected by lht}

\item{type}{type of test to run, one of 'Wald' or 'LRT'}

\item{keep.zlm}{should the model objects be kept?}

\item{.parallel}{run fits using parallel processing.  must have doParallel}

\item{silent}{Silence common problems with fitting some genes}

\item{...}{passed to glm/glmer}
}
\value{
either an array of tests (one per primer) or a list
}
\description{
zero-inflated regression for SingleCellAssay
}
\details{
For each gene in sca, fits the hurdle model in \code{formula} (linear for et>0), logistic for et==0 vs et>0.
Conducts tests using hypothesis.matrix.

When keep.zlm is FALSE, a 3D array with first dimension being the genes,
next dimension giving information about the test
(the degrees of freedom, Chisq statistic, and P value), and final dimension
being the value of these quantities on the
discrete, continuous and hurdle (combined) levels.

When keep.zlm is TRUE, a list of length two is returned.
Component "tests" gives the above 3-D array.
Component "models" is a list giving the model fit for each gene.
}
\examples{
\dontrun{
data(vbetaFA)
testsByGene <- zlm.SingleCellAssay(Et ~ Stim.Condition, vbetaFA, hypothesis.matrix='Stim.ConditionUnstim')
# genes X metric X test type
dimnames(testsByGene)

modelsAndTestsByGene <- zlm.SingleCellAssay(Et ~ Stim.Condition, vbeta.sc, hypothesis.matrix='Stim.ConditionUnstim', keep.zlm=TRUE)
names(modelsAndTestsByGene$models)
summary(modelsAndTestsByGene$models[['IL13']]$disc)
summary(modelsAndTestsByGene$models[['IL13']]$cont)
}
}

