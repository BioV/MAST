% Generated by roxygen2 (4.0.2): do not edit by hand
\name{gseaAfterBoot}
\alias{calcZ}
\alias{gseaAfterBoot}
\title{Gene set analysis for hurdle model}
\usage{
gseaAfterBoot(zFit, boots, sets, hypothesis, control = list(n_randomize =
  Inf))

calcZ(tests, testType = "t")
}
\arguments{
\item{zFit}{object of class ZlmFit}

\item{boots}{bootstraps of zFit}

\item{sets}{list of indices of genes}

\item{hypothesis}{a \code{Hypothesis} to test. Currently only one degree \code{CoefficientHypothesis} are supported}

\item{control}{list of control parameters.  See details.}

\item{tests}{output from \code{gseaAfterBoot}}

\item{testType}{either 'normal' or 't'.  The 't' test adjusts for excess kurtosis due to the finite number of bootstrap replicates used to estimate the variance of the statistics.  This will result in more conservative inference.}
}
\value{
4D array.  See details.

3D array with dimensions set (modules) comp ('cont'inuous or 'disc'rete) and metric ('Z' stat and two sided 'P' value that P(z>|Z|))
}
\description{
Modules defined in \code{sets} are tested for average differences in expression from the "average" gene.
By using bootstraps, the between-gene covariance of terms in the hurdle model is found, and is used to adjust for coexpression between genes

Get Z or T statistics and P values after running gseaAfterBoot
}
\details{
\code{control} is a list with elements \code{n_randomize}, giving the number of genes to sample to approximate the non-module average expression. Default 1000.  Set to \code{Inf} to turn off the approximation.

A 4D array is returned, with  dimensions "set" (each module), "comp" ('disc'rete or 'cont'inuous), "metric" ('stat' gives the average of the coefficient, 'var' gives the variance of that average, 'dof' gives the number of genes in the set), "group" ('test' for the genes in test-set, "null" for all genes outside the test-set).
}
\section{Functions}{
\itemize{
\item \code{}: 
}}
\examples{
data(vbetaFA)
vb1 = subset(vbetaFA, ncells==1)
vb1 = vb1[,freq(vb1)>.1]
zf = zlm.SingleCellAssay(~Stim.Condition, vb1)
boots = bootVcov1(zf, 10)
sets=list(A=1:5, B=3:10, C=15, D=1:5)
gsea=gseaAfterBoot(zf, boots, sets, CoefficientHypothesis('Stim.ConditionUnstim'))
dimnames(gsea)
calcZ(gsea)
stopifnot(all.equal(gsea['A',,,],gsea['D',,,]))
stopifnot(all.equal(gsea['C','cont','stat','test'], coef(zf, 'C')[15,'Stim.ConditionUnstim']))
}

